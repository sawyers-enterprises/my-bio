name: Deploy to Cloudflare Pages

# Trigger deployment on push to main branch and pull requests
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

# Define environment variables
env:
  NODE_VERSION: '20'
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    
    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Setup Node.js environment with Yarn caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock
          
      # Install frontend dependencies using Yarn
      - name: Install dependencies
        run: |
          cd frontend
          yarn install --frozen-lockfile
          
      # Build the React application
      - name: Build application
        run: |
          cd frontend
          yarn build
        env:
          # Set production environment variables
          CI: false
          GENERATE_SOURCEMAP: false
          
      # Deploy to Cloudflare Pages
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          # Cloudflare API token with Pages:Edit permissions
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Cloudflare Account ID
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Project name in Cloudflare Pages (will be created if doesn't exist)
          projectName: louie-sawyer-portfolio
          # Directory containing built files
          directory: frontend/build
          # Git info for deployment tracking
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Wrangler version
          wranglerVersion: '3'
          
      # Optional: Add deployment status comment to PR
      - name: Add deployment status comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ **Deployment Status**: Your changes have been deployed to Cloudflare Pages for preview!'
            })